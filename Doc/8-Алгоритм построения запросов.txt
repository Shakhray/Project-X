Технические таблицы
Tables - содержит информацию о таблицах БД
Columns - содержит информацию о столбцах таблиц
References - таблица связей между таблицами Tables и Columns

Состав таблиц

Tables[id, name, description]
id - идентификатор записи
name - наименование таблицы
description - описание таблицы

Columns[id, name, type, param_1, param_2, is_pk, description]
id - идентификатор записи
name - наименование столбца
type - тип столбца
param_1 - первый параметр типа
param_2 - второй параметр типа
is_pk - признак первичного ключа (значения 0 или 1)
description - описание столбца

References[table_id, column_id]
table_id - ссылка на идентификатор записи о таблице
column_id - ссылка на идентификатор записи о столбце

----------------------------------------------------------------------

Алгоритм построения запросов

Примечание - слова, записанные большими буквами есть переменные, вместо которых подставляется непосредственно значение

I. Операции создания и удаления

1. Создание таблицы
а) Проверить, что введенное имя новой таблицы отсутствует в Tables 
	select count(id) exists from Tables where name = TABLE_NAME
б) Если exists = 1 - отказ Операции
в) Если exists = 0, выполнить запрос
	Create table TABLE_NAME;
г) Выполнить Операцию 9.
	где TABLE_NAME - имя таблицы, DESCRIPTION - текстовое описание
д) Внести имя таблицы в Tables
	Insert into Tables values (ID, TABLE_NAME, DESCRIPTION)
	
2. Удаление таблицы
a) Из Columns удалить все записи о строках удаляемой таблицы
	delete from Columns where id in (select r.column_id from References r inner join Tables t on r.table_id = t.id and t.name = TABLE_NAME)
б) Удалить из References записи j, удаляемой таблицы
	delete from References where table_id = (select id from Tables where name = TABLE_NAME)
в) Удалить запись о таблице из Tables
	delete from Tables where name = TABLE_NAME
г) Удалить таблицу из базы следующим скриптом
	drop table TABLE_NAME
	
3. Добавление столбца
а) Проверить, что столбец с таким именем у данной таблицы отсутствует в Columns
	select count(id) exists from Columns where name = COL_NAME
б) Если exists = 1 - отказ Операции
в) Если exists = 0, сконфигурировать и выполнить запрос на добавление столбца
	alter table TABLE_NAME add COL_NAME TYPE;
	где COL_NAME - наименование добавляемого столбца,
		TYPE - тип столбца
		причем TYPE:=COL_TYPE(P1) - если тип имеет один параметр
			   TYPE:=COL_TYPE(P1,P2) - если тип имеет два параметра
			   COL_TYPE - наименование типа
			   P1, P2 - числовые значения параметров типа
г) Выполнить Операцию 6.
д) Если добавляемый столбец является первичным ключом или входит в состав первичного ключа, выполнить Операцию 7.
е) Добавить запить о столбце в Columns
	Insert into Columns values (COL_ID, COL_NAME, COL_TYPE, P1, P2, IS_PK, DESCRIPTION)
	где COL_ID - идентификатор записи
		COL_NAME - наименование столбца
		COL_TYPE - тип столбца
		P1, P2 - параметры типа
		IS_PK - признак первичного ключа
		DESCRIPTION - описание столбца
ж) Внести запись в References
	insert into References values (TABLE_ID, COL_ID)
	где TABLE_ID - идентификатор записи о таблице
		COL_ID - идентификатор записи о столбце
			   
4. Удаление столбца 
а) Если столбец входит в первичный ключ, выполнить Операцию 8.
б) Выполнить удаление столбца из таблицы
	alter table TABLE_NAME drop column COL_NAME
в) По имени столбца и таблицы вычислить идентификатор ID записи о столбце в таблице Columns	
	select c.id ID from References r inner join Columns c on c.id = r.column_id and c.name = COL_NAME 
								  inner join Tables t on t.id = r.table_id and t.name = TABLE_NAME 
г) Удалить запись о столбце из References
	delete from References where column_id = ID
	где ID - идентификатор записи об удаляемом столбце
д) Удалить записть из Columns
	delete from Columns where id = ID
	
II. Операции изменения столбца
	
5. Изменение типа столбца 
а) Сконфигурировать и выполнить запрос на изменение типа столбца
	alter table TABLE_NAME modify COL_NAME NEW_TYPE
	где NEW_TYPE - новый тип
	причем NEW_TYPE := COL_TYPE(P1) - если новый тип имеет один параметр	
	       NEW_TYPE := COL_TYPE(P1, P2) - если новый тип имеет два параметра
		   COL_TYPE - наименование типа
		   P1, P2 - числовые значения параметра типа
	
6. Изменение описания столбца 
а)  Выполнить следующий запрос
	Comment on column TABLE_NAME.COL_NAME is 'DESCRIPTION'
	где DESCRIPTION - описание столбца

7. Добавление столбца в первичный ключ
а) Проанализировать, есть ли уже в таблице первичный ключ
б) Если нет, создать его
	alter table TABLE_NAME add constraint PK_TABLE_NAME(COL_NAME),
	где PK_TABLE_NAME - наименование ограничения 
		COL_NAME - имя столбца
в) Если есть, удаляем существующий первичный ключ и переходим к шагу г)
	alter table TABLE_NAME drop constraint PK_TABLE_NAME;
г) Из столбцов, входящих в первичный ключ, и добавляемого столбца сформировать новый первичный ключ
	alter table TABLE_NAME add constraint PK_TABLE_NAME(PK_1, ..., PK_N, NEW_PK)
	где PK_1, ..., PK_N - наименование столбцов, входящих в старый первичный ключ
		NEW_PK - наименование добавляемого столбца
		
8. Удаление столбца из первичного ключа
а) Удалить первичный ключ запросом
	alter table TABLE_NAME drop constraint PK_TABLE_NAME
б) Проанализировать, остались ли столбцы, входящие в удаденный ключ
в) Если да, то выполнить восстановление первичного ключа
	alter table TABLE_NAME add constraint PK_TABLE_NAME(PK_1, ..., PK_N)
	PK_1,..., PK_N - наименование столбцов, входящих в удаченный первичный ключ, за исключением столбца, удаленного из ключа

9. Изменение описания таблицы
а) Выполнить следующий запрос
	Comment on table TABLE_NAME is 'DESCRIPTION'
	где DESCRIPTION - новое описание таблицы
								
10. Обновление записи в Columns
	update Columns set c.name = NEW_COL_NAME, type = COL_TYPE, param_1 = P1, param_2 = P2, is_pk = IS_PK, description = DESCRIPTION
		where id = (select c.id from Columns c inner join References r on c.id = r.column_id and c.name = OLD_COL_NAME
											   inner join Tables t on t.id = r.table_id and t.name = TABLE_NAME)
	где NEW_COL_NAME - новое наименование столбца
		OLD_COL_NAME - старое наименование столбца
	Примечание. Если наименование столбца не менялось, NEW_COL_NAME и OLD_COL_NAME будут совпадать
11. Обновление записи в Tables
	update Tables set name = NEW_TABLE_NAME, description = 'DESCRIPTION' where name = OLD_TABLE_NAME
	где NEW_TABLE_NAME - новое наименование таблицы
		OLD_TABLE_NAME - старое наименование таблицы
	Примечание. Если наименование таблицы не менялось, NEW_TABLE_NAME и OLD_TABLE_NAME будут совпадать
	
											   
---- !!!ВАЖНО!!! ----------------------------------------

После выполнения Операций 5-8, необходимо выполнить Операцию 10. 
После выполнения Операции 9, необходимо  выполнить Операцию 11.
Если Операции 6 и 9 выполнялить в составе других Операций, то Операции 10 и 11 выполнять НЕ НУЖНО
Операции 5-8 могут идти цепочкой для одного столбца. Тогда для этой цепочки достаточно один раз в конце выполнить Операцию 10.								   

---------------------------------------------------------

12. Изменение названия таблицы
13. Изменения названия столбцах
Для Операций 12 и 13 в стандарте SQL не предусмотрены команды
Возможные решение: 
	1. Платформенно зависимое - описать несколько вариантов команд для наиболее популярных СУБД
	2. Платформенно независимое - создать новую таблицу или столбец  клонированием с новым названием, старую таблицу или столбец удалить