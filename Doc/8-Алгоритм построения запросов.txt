Технические таблицы
Table - содержит информацию о таблицах БД
Column - содержит информацию о столбцах таблиц

Состав таблиц

Table[id, name, description]
id - идентификатор записи
name - наименование таблицы
description - описание таблицы

Column[id, name, type, param_1, param_2, is_pk, description, table]
id - идентификатор записи
name - наименование столбца
type - тип столбца
param_1 - первый параметр типа
param_2 - второй параметр типа
is_pk - признак первичного ключа (значения 0 или 1)
description - описание столбца
table - ссылка на запись таблицы Table

Пользовательский интерфейс позволяет совершать следующие действия над таблицей
1. Создание таблицы
2. Удаление таблицы
3. Добавление столбца
4. Удаление столбца
5. Изменение типа стоблца
6. Добавить столбец в первичный ключ
7. Удалить столбец из первичного ключа

После совершения каждой из этих операций необходимо обновить данные технических таблиц:
 - Создание таблцы - информация о таблице и столбцах вносится в таблицы Table и Column
 - Удаление таблицы - информация о таблице и столбцах удаляется из таблиц Table и Column
 - Добавление столбца - добавляется запись о столбце в таблицу Column
 - Удаление столбца - удаляется запись о столбце из таблицы Column
 - Изменение типа столбца - обновляется запить о текущем столбе в таблице Column
 - Добавление первичного ключа - при добавлении существующего столбца в ключ обновляется запись о текущем столбце в таблице Column,
								 при создании нового столбца, который входит в первичный ключ, добавление записи о столбце в таблицу Column
 - Добавление первичного ключа - при удалении столбца из первичного ключа обновляется запись о текущем столбце в таблице Column,
								 при удалении самого столбца, который входит в первичный ключ, удалении записи о столбце в таблицу Column

В соответствии с доступными операциями над таблицей необходимо реализовать следующие SQL Операции:

Примечание: слова, записанные большими буквами, есть переменные, вместо которых подставляется непосредственно значение

I. Операции создания и удаления

Операция 1. Создание таблицы
	сreate table TABLE_NAME (
		COLUMN_1 TYPE_1,
		...............
		COLUMN_K TYPE_K
		[,constraint PK_TABLE_NAME primary key (PK_1,..., PK_N)]
	);
	где COLUMN_1, ..., COLUMN_K - наименование добавляемых столбцов,
	    TYPE_1, ..., TYPE_K - типы добавляемых столбцов,
		причем TYPE_K := COL_TYPE - если тип не имеет параметров
			   TYPE_K := COL_TYPE(P1) - если тип имеет один параметр
			   TYPE_K := COL_TYPE(P1,P2) - если тип имеет два параметра
			   COL_TYPE - наименование типа 
			   P1, P2 - числовые значения параметров типа
			   [,constraint PK_TABLE_NAME primary key (PK_1,..., PK_N)] - означает, что первичный ключ опционален и добавляется лишь при его наличии
			   PK_TABLE_NAME - наименование первичного ключа
			   PK_1,...,PK_N - наименование столбцов, входящих в первичный ключ

Операция 2. Удаление таблицы
	drop table TABLE_NAME;
	где TABLE_NAME - наименование удаляемой таблицы			
	
Операция 3. Добавление столбца
	alter table TABLE_NAME add COL_NAME TYPE;
	где COL_NAME - наименование добавляемого столбца,
		TYPE - тип столбца
		причем TYPE:=COL_TYPE - если тип не имеет параметров
			   TYPE:=COL_TYPE(P1) - если тип имеет один параметр
			   TYPE:=COL_TYPE(P1,P2) - если тип имеет два параметра
			   COL_TYPE - наименование типа
			   P1, P2 - числовые значения параметров типа
			   
Операция 4. Удаление столбца 
	alter table TABLE_NAME drop column COL_NAME;
	где TABLE_NAME - наименование таблицы
	    COL_NAME - наименование удаляемого столбца
	
II. Операции изменения столбца
	
Операция 5. Изменение типа столбца 
	alter table TABLE_NAME modify COL_NAME NEW_TYPE;
	где NEW_TYPE - новый тип
	причем NEW_TYPE := COL_TYPE - если нет параметров
		   NEW_TYPE := COL_TYPE(P1) - если новый тип имеет один параметр	
	       NEW_TYPE := COL_TYPE(P1, P2) - если новый тип имеет два параметра
		   COL_TYPE - наименование типа
		   P1, P2 - числовые значения параметра типа

Операция 6. Удаление первичного ключа
	alter table TABLE_NAME drop constraint PK_TABLE_NAME;

Операция 7. Добавление первичного ключа
	alter table TABLE_NAME add constraint PK_TABLE_NAME(PK_1, ..., PK_N);
	где PK_1, ..., PK_N - наименование столбцов, входящих в первичный ключ
	
Операция 8. Внесение имени таблицы в Table
	Insert into Table values (TABLE_ID, TABLE_NAME, DESCRIPTION);
		где TABLE_ID - идентификатор создаваемой таблицы
		    TABLE_NAME - наименование наименование таблицы
			DESCRIPTION - описание таблицы
			
Операция 9. Обновление записи в Table
	update Table set name = TABLE_NAME, description = 'DESCRIPTION' where id = TABLE_ID;		
			
Операция 10. Удаление записи о таблице из Table
	delete from Table where id = TABLE_ID;
		где TABLE_ID - идентификатор создаваемой таблицы

Операция 11. Внесение информации о столбцах в таблицу Column
	Insert into Column (id, name, type, p1, p2, is_pk, description, table) values (COL_ID, COL_NAME, COL_TYPE, P1, P2, IS_PK, DESCRIPTION, TABLE);
		где COL_ID - идентификатор столбца
		    COL_NAME - наименование столбца
			COL_TYPE - наименование типа столбца
			P1, P2 - параметры типа
			IS_PK - признак первичного ключа
			DESCRIPTION - описание столбца
			TABLE - ссылка на запись из таблицы Table
			
Операция 12. Обновление записи в Column
	update Column set c.name = COL_NAME, type = COL_TYPE, param_1 = P1, param_2 = P2, is_pk = IS_PK, description = DESCRIPTION, table = TABLE
		where id = COL_ID;
		
Операция 13. Удаление всех записей о строках таблицы из Column
	delete from Column where table = TABLE_ID;
		где TABLE_ID - идентификатор удаляемой таблицы
  
Примечание: операции изменения названия таблицы и изменения названия столбца пока не предусмотрены в силу отсутствия в стандарте SQL соответствующих команд.
Возможные решение: 
	1. Платформенно зависимое - описать несколько вариантов команд для наиболее популярных СУБД
	2. Платформенно независимое - создать новую таблицу или столбец  клонированием с новым названием, старую таблицу или столбец удалить
	
	
Алгоритм построения запросов 

Вся работа с таблицей до момента нажатия на кнопку Сохранить осуществляется в памяти. 
Память хранит два представления таблицы: текущее состаяние таблицы и состояние до редактирования таблицы
После нажатия на кнопку Сохранить:
	1. Сравнение этих двух таблиц. На основе разницы составляется SQL скрипт, состоящий из операций, описанных выше.
	2. Перед созданием скрипта происходит проверка имени создаваемой таблицы и создаваемых столбцов на наличие их в таблицах Table и Column
		1.1 Для создаваемой таблицы проверяется наличие её имени в таблице Table
			- Если такое название уже есть, отменить создание таблицы с уведомлением об этом пользователю с причиной отмены
		1.2 Для создаваемых столбцов проверяется наличие их имен в таблице Column для текущей таблицы
			- Если такие названия уже есть, отменить создание таблицы с уедомлением об этом пользователю с причиной отмены
	3. Если проверки пройдены, выполняется создание SQL скрипта 

Создание SQL скрипта
	
SQL скрипт представляет собой последовательность Операций 1-13.	
	
1. Если создаётся новая таблица: 
	1.1 Проверяется наличие имени создаваемой таблицы в Table
	1.2 Если такое название уже есть, отменить создание таблицы с уедомлением об этом пользователю с причиной отмены
	1.3 Если нет, то последовательно выполняются следующие операции:
	 - Операция 1 (Создание таблицы)
	 - Операция 8 (Внесение имени таблицы в Table) 
	 - Операция 11 (Внесение информации о столбцах в таблицу Column)
	 
2. Если таблица удаляется, то последовательно выполняются следующие операции:
	- Операция 2 (Удаление таблицы)
	- Операция 10 (Удаление записи о таблице из Table)
    - Операция 13 (Удаление всех записей о строках таблицы из Column)
	
3. Если таблица редактируется:
	3.1 Выполняется проверка на наличие в таблице Column столбца с таким же именем у редактируемой таблицы
	3.1 Выполняется проверка, менялся ли первичный ключ
	3.2 Если да, выполняется удаление первичного ключа (Операция 6)
	3.3 Для каждого добавляемого столбца выполнить следующие операции:
		- Операция 3 (Добавление столбца)
		- Операция 11 (Внесение информации о столбцах в таблицу Column)
	3.4 Для каждого удаляемого столбца выполнить следующте операции
		- Операция 4 (Удаление столбца)
		- Операция 13 (Удаление всех записей о строках таблицы из Column)
	3.5 Для каждого столбца, у которого менялся тип, выполнить следующие операции
		- Операция 5 (Изменение типа столбца)
		- Операция 12 (Обновление записи в Column)
	3.6 Если первичный ключ менялся, выполнить создание первичного ключа (Операция 7)
	3.7 Если перед созданием первичного ключа шаги 3.3 - 3.5 отсутстовали, то по после создания первичного ключа выполнить Операцию 12 (Обновление записи в Column)

Данный скрипт выполняется одной транзакцией.	

Если транзакция выполнена успешно, таблица, хранящаяся в памяти и отображающая данные до редактирования, синхронизирует свое состояние с БД по средствам присвоения начения таблицы, отображающей данные после редактирования.
Если транзакция не выполнена, происходит откат транзакции (состояние таблицы возвращается на момент до её редактирования)