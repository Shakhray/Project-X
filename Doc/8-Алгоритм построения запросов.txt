Технические таблицы
Table - содержит информацию о таблицах БД
Column - содержит информацию о столбцах таблиц

Состав таблиц

Table[id, name, description]
id - идентификатор записи
name - наименование таблицы
description - описание таблицы

Column[id, name, type, param_1, param_2, is_pk, description, table]
id - идентификатор записи
name - наименование столбца
type - тип столбца
param_1 - первый параметр типа
param_2 - второй параметр типа
is_pk - признак первичного ключа (значения 0 или 1)
description - описание столбца
table - ссылка на запись таблицы Table

-- TODO описание, почему мы используем такой набор операций. Написать, когда соотв. операции выполняются

-- TODO - операция удаления/удачения первич. ключа делать один раз для таблицы

----------------------------------------------------------------------

Алгоритм построения запросов

Примечание - слова, записанные большими буквами есть переменные, вместо которых подставляется непосредственно значение

I. Операции создания и удаления

1. Создание таблицы
а) Проверить, что введенное имя новой таблицы отсутствует в Table (посмотреть в памяти)
б) Если есть - отказ Операции
в) Если нет - выполнить запрос
	Create table TABLE_NAME (
		COLUMN_1 TYPE_1,
		...............
		COLUMN_K TYPE_K
		[,constraint PK_TABLE_NAME primary key (PK_1,..., PK_N)]
	);
	где COLUMN_1, ..., COLUMN_K - наименование добавляемых столбцов,
	    TYPE_1, ..., TYPE_K - типы добавляемых столбцов,
		причем TYPE_K := COL_TYPE - если тип не имеет параметров
			   TYPE_K := COL_TYPE(P1) - если тип имеет один параметр
			   TYPE_K := COL_TYPE(P1,P2) - если тип имеет два параметра
			   COL_TYPE - наименование типа 
			   P1, P2 - числовые значения параметров типа
			   [,constraint PK_TABLE_NAME primary key (PK_1,..., PK_N)] - означает, что первичный ключ опционален и добавляется лишь при его наличии
			   PK_TABLE_NAME - наименование первичного ключа
			   PK_1,...,PK_N - наименование столбцов, входящих в первичный ключ
г) Внести имя таблицы в Table
	Insert into Table values (TABLE_ID, TABLE_NAME, DESCRIPTION)
		где TABLE_ID - идентификатор создаваемой таблицы
		    TABLE_NAME - наименование наименование таблицы
			DESCRIPTION - описание таблицы
д) Внести информацию о столбцах в таблицу Column
	Insert into Column (id, name, type, p1, p2, is_pk, description, table) values (COL_ID, COL_NAME, COL_TYPE, P1, P2, IS_PK, DESCRIPTION, TABLE)
		где COL_ID - идентификатор столбца
		    COL_NAME - наименование столбца
			COL_TYPE - наименование типа столбца
			P1, P2 - параметры типа
			IS_PK - признак первичного ключа
			DESCRIPTION - описание столбца
			TABLE - ссылка на запись из таблицы Table
	
2. Удаление таблицы
a) Из Column удалить все записи о строках удаляемой таблицы
	delete from Column where table = TABLE_ID
	где TABLE_ID - идентификатор удаляемой таблицы
б) Удалить запись о таблице из Table
	delete from Table where id = TABLE_ID
в) Удалить таблицу из базы следующим скриптом
	drop table TABLE_NAME
	где TABLE_NAME - наименование удаляемой таблицы
	
	-- TODO Для операции добавления первичного ключа надо продумать добавление/удачение првичного ключа (в одном скрипте может быть добавлено два столбца, входящих в первичный ключ).
	   тогда ключ надо добавлять/удалять один раз
	
3. Добавление столбца
а) Проверить, что столбец с таким именем у данной таблицы отсутствует в Column (проверить в памяти)
б) Если есть - отказ Операции
в) Если нет - сконфигурировать и выполнить запрос на добавление столбца
	alter table TABLE_NAME add COL_NAME TYPE;
	где COL_NAME - наименование добавляемого столбца,
		TYPE - тип столбца
		причем TYPE:=COL_TYPE - если тип не имеет параметров
			   TYPE:=COL_TYPE(P1) - если тип имеет один параметр
			   TYPE:=COL_TYPE(P1,P2) - если тип имеет два параметра
			   COL_TYPE - наименование типа
			   P1, P2 - числовые значения параметров типа
г) Если добавляемый столбец является первичным ключом или входит в состав первичного ключа, выполнить Операцию 6 (добавление столбца в первичный ключ).
д) Добавить запить о столбце в Column
	Insert into Column (id, name, type, p1, p2, is_pk, description, table) values (COL_ID, COL_NAME, COL_TYPE, P1, P2, IS_PK, DESCRIPTION, TABLE)
	где COL_ID - идентификатор записи
		COL_NAME - наименование столбца
		COL_TYPE - тип столбца
		P1, P2 - параметры типа
		IS_PK - признак первичного ключа
		DESCRIPTION - описание столбца
		TABLE - ссылка на запись из таблицы Table
			   
4. Удаление столбца 
а) Если столбец входит в первичный ключ, выполнить Операцию 7 (удаление столбца из первичного ключа).
б) Выполнить удаление столбца из таблицы
	alter table TABLE_NAME drop column COL_NAME
	где TABLE_NAME - наименование таблицы
	    COL_NAME - наименование удаляемого столбца
в) Удалить записть из Column
	delete from Column where id = COL_ID
	где COL_ID - идентификатор удаляемого столбца
	
II. Операции изменения столбца
	
5. Изменение типа столбца 
а) Сконфигурировать и выполнить запрос на изменение типа столбца
	alter table TABLE_NAME modify COL_NAME NEW_TYPE
	где NEW_TYPE - новый тип
	причем NEW_TYPE := COL_TYPE - если нет параметров
		   NEW_TYPE := COL_TYPE(P1) - если новый тип имеет один параметр	
	       NEW_TYPE := COL_TYPE(P1, P2) - если новый тип имеет два параметра
		   COL_TYPE - наименование типа
		   P1, P2 - числовые значения параметра типа
б) Выполнить Операцию 8.

6. Добавление столбца в первичный ключ
а) Проанализировать, есть ли уже в таблице первичный ключ
б) Если нет, создать его
	alter table TABLE_NAME add constraint PK_TABLE_NAME(COL_NAME),
	где PK_TABLE_NAME - наименование первичного ключа 
		COL_NAME - имя столбца
в) Если есть, удаляем существующий первичный ключ и переходим к шагу г)
	alter table TABLE_NAME drop constraint PK_TABLE_NAME;
г) Из столбцов, входящих в первичный ключ, и добавляемого столбца сформировать новый первичный ключ
	alter table TABLE_NAME add constraint PK_TABLE_NAME(PK_1, ..., PK_N, NEW_PK)
	где PK_1, ..., PK_N - наименование столбцов, входящих в старый первичный ключ
		NEW_PK - наименование добавляемого столбца

7. Удаление столбца из первичного ключа
а) Удалить первичный ключ запросом
	alter table TABLE_NAME drop constraint PK_TABLE_NAME
б) Проанализировать, остались ли столбцы, входящие в удаденный ключ
в) Если да, то выполнить восстановление первичного ключа
	alter table TABLE_NAME add constraint PK_TABLE_NAME(PK_1, ..., PK_N)
	PK_1,..., PK_N - наименование столбцов, входящих в удаченный первичный ключ, за исключением столбца, удаленного из ключа

8. Обновление записи в Column
	update Column set c.name = COL_NAME, type = COL_TYPE, param_1 = P1, param_2 = P2, is_pk = IS_PK, description = DESCRIPTION, table = TABLE
		where id = COL_ID
9. Обновление записи в Table
	update Table set name = TABLE_NAME, description = 'DESCRIPTION' where id = TABLE_ID
	
  
---- !!!ВАЖНО!!! ----------------------------------------

После выполнения Операций 5-7, необходимо выполнить Операцию 8. 
Если Операции 6 и 7 выполнялить в составе других Операций, то Операцию 8 выполнять НЕ НУЖНО
Операции 5-7 могут идти цепочкой для одного столбца. Тогда для этой цепочки достаточно один раз в конце выполнить Операцию 8.								   

---------------------------------------------------------

10. Изменение названия таблицы
11. Изменение названия столбца
Для Операций 10 и 11 в стандарте SQL не предусмотрены команды
Возможные решение: 
	1. Платформенно зависимое - описать несколько вариантов команд для наиболее популярных СУБД
	2. Платформенно независимое - создать новую таблицу или столбец  клонированием с новым названием, старую таблицу или столбец удалить